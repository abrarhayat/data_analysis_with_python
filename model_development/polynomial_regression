from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures, StandardScaler
from sklearn.pipeline import Pipeline
from data_wrangling import dataframe_manager as dm
import numpy as np

location = "https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/DA0101EN/auto.csv"
headers = ["symboling", "normalized-losses", "make", "fuel-type", "aspiration", "num-of-doors", "body-style",
           "drive-wheels", "engine-location", "wheel-base", "length", "width", "height", "curb-weight", "engine-type",
           "num-of-cylinders", "engine-size", "fuel-system", "bore", "stroke", "compression-ratio", "horsepower",
           "peak-rpm", "city-mpg", "highway-mpg", "price"]

df = dm.get_clean_data_frame(location, headers)
print(df.head())
X = df[['highway-mpg', 'horsepower']]
Y = df['price']

# 1d Polynomial Regression
# f = np.polyfit(X, Y, 3)
# p = np.poly1d(f)
# print(p)

# # Multidimensional Polynomial Regression
# pr = PolynomialFeatures(degree=2)
# pr.fit_transform([X, Y])

# Scaling
# SCALE = StandardScaler
# SCALE.fit(X)
# x_scale = SCALE.fit_transform(X)

# Pipeline
# Input = [('scale', StandardScaler()), ('polynomial', PolynomialFeatures(degree=2), ('mode', LinearRegression()))]
# pipe = Pipeline(Input)
# pipe.fit(X, Y)
# Yhat = pipe.predict(X)

